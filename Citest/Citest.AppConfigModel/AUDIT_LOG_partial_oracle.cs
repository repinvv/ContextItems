//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Citest.AppConfigModel
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Linq;
    using System.Text;
    using Oracle.DataAccess.Client;

    public partial class AUDIT_LOG : IOracleEntity
    {
        public override bool Equals(object obj)
        {
            return Equals(obj as AUDIT_LOG);
        }

        public bool Equals(AUDIT_LOG other)
        {
            if (other == null)
            {
                return false;
            }

            return LOGID == other.LOGID;
        }

        public override int GetHashCode()
        {
            unchecked
            {
                return LOGID.GetHashCode();
            }
        }

        void IOracleEntity.Materialize(IDataRecord input, IFieldsCaster caster)
        {
            LOGID = caster.GetRecord<decimal>(0, input);
            EVENTID = caster.GetNullableRecord<decimal>(1, input);
            PRIORITY = caster.GetRecord<decimal>(2, input);
            SEVERITY = input.IsDBNull(3) ? null : input.GetString(3);
            TITLE = input.IsDBNull(4) ? null : input.GetString(4);
            TIMESTAMP = caster.GetRecord<DateTime>(5, input);
            MACHINENAME = input.IsDBNull(6) ? null : input.GetString(6);
            APPDOMAINNAME = input.IsDBNull(7) ? null : input.GetString(7);
            PROCESSID = input.IsDBNull(8) ? null : input.GetString(8);
            PROCESSNAME = input.IsDBNull(9) ? null : input.GetString(9);
            THREADNAME = input.IsDBNull(10) ? null : input.GetString(10);
            WIN32THREADID = input.IsDBNull(11) ? null : input.GetString(11);
            FORMATTEDMESSAGE = input.IsDBNull(12) ? null : input.GetString(12);
            MESSAGE = input.IsDBNull(13) ? null : input.GetString(13);
        }

        Type[] IOracleEntity.GetFieldTypes()
        {
            return new[]
            {
                typeof(decimal),
                typeof(decimal),
                typeof(decimal),
                typeof(string),
                typeof(string),
                typeof(DateTime),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
            };
        }

        string IOracleEntity.GetOracleInsertRequest(string schemaName)
        {
            return "INSERT INTO " + schemaName + "AUDIT_LOG\r\n"
            + "    (EVENTID, PRIORITY, SEVERITY, TITLE, TIMESTAMP, MACHINENAME, APPDOMAINNAME,\r\n"
            + "     PROCESSID, PROCESSNAME, THREADNAME, WIN32THREADID, FORMATTEDMESSAGE, MESSAGE, LOGID) VALUES\r\n"
            + "    (:parm1, :parm2, :parm3, :parm4, :parm5, :parm6, :parm7,\r\n"
            + "     :parm8, :parm9, :parm10, :parm11, :parm12, :parm13, :parm14) ";
        }

        string IOracleEntity.GetOracleUpdateRequest(string schemaName)
        {
            return "UPDATE " + schemaName + "AUDIT_LOG\r\n"
                + "SET EVENTID = :parm1,\r\n"
                + "    PRIORITY = :parm2,\r\n"
                + "    SEVERITY = :parm3,\r\n"
                + "    TITLE = :parm4,\r\n"
                + "    TIMESTAMP = :parm5,\r\n"
                + "    MACHINENAME = :parm6,\r\n"
                + "    APPDOMAINNAME = :parm7,\r\n"
                + "    PROCESSID = :parm8,\r\n"
                + "    PROCESSNAME = :parm9,\r\n"
                + "    THREADNAME = :parm10,\r\n"
                + "    WIN32THREADID = :parm11,\r\n"
                + "    FORMATTEDMESSAGE = :parm12,\r\n"
                + "    MESSAGE = :parm13\r\n"
                + "WHERE LOGID = :parm14\r\n";
        }

        string IOracleEntity.GetOracleDeleteRequest(string schemaName)
        {
            return "DELETE " + schemaName + "AUDIT_LOG\r\n"
                + "WHERE LOGID = :parm1\r\n";
        }

        OracleParameter IOracleEntity.AddOracleInsertParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            ((IOracleEntity)this).AddOracleUpdateParameters(entities, command);
            return null;
        }

        void IOracleEntity.AddOracleUpdateParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            var parm1 = new List<decimal?>();
            var parm2 = new List<decimal>();
            var parm3 = new List<string>();
            var parm4 = new List<string>();
            var parm5 = new List<DateTime>();
            var parm6 = new List<string>();
            var parm7 = new List<string>();
            var parm8 = new List<string>();
            var parm9 = new List<string>();
            var parm10 = new List<string>();
            var parm11 = new List<string>();
            var parm12 = new List<string>();
            var parm13 = new List<string>();
            var parm14 = new List<decimal>();
            foreach (var entity in entities.Cast<AUDIT_LOG>())
            {
                parm1.Add(entity.EVENTID);
                parm2.Add(entity.PRIORITY);
                parm3.Add(entity.SEVERITY);
                parm4.Add(entity.TITLE);
                parm5.Add(entity.TIMESTAMP);
                parm6.Add(entity.MACHINENAME);
                parm7.Add(entity.APPDOMAINNAME);
                parm8.Add(entity.PROCESSID);
                parm9.Add(entity.PROCESSNAME);
                parm10.Add(entity.THREADNAME);
                parm11.Add(entity.WIN32THREADID);
                parm12.Add(entity.FORMATTEDMESSAGE);
                parm13.Add(entity.MESSAGE);
                parm14.Add(entity.LOGID);
            }

            command.BindByName = true;
            command.ArrayBindCount = parm1.Count;
            command.Parameters.Add("parm1", OracleDbType.Decimal, parm1.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm2", OracleDbType.Decimal, parm2.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm3", OracleDbType.NVarchar2, parm3.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm4", OracleDbType.NVarchar2, parm4.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm5", OracleDbType.TimeStamp, parm5.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm6", OracleDbType.NVarchar2, parm6.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm7", OracleDbType.NVarchar2, parm7.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm8", OracleDbType.NVarchar2, parm8.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm9", OracleDbType.NVarchar2, parm9.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm10", OracleDbType.NVarchar2, parm10.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm11", OracleDbType.NVarchar2, parm11.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm12", OracleDbType.XmlType, parm12.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm13", OracleDbType.NClob, parm13.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm14", OracleDbType.Decimal, parm14.ToArray(), ParameterDirection.Input);
        }

        void IOracleEntity.AddOracleDeleteParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            var parm1 = new List<decimal>();
            foreach (var entity in entities.Cast<AUDIT_LOG>())
            {
                parm1.Add(entity.LOGID);
            }

            command.BindByName = true;
            command.ArrayBindCount = parm1.Count;
            command.Parameters.Add("parm1", OracleDbType.Decimal, parm1.ToArray(), ParameterDirection.Input);
        }

        void IOracleEntity.ApplyOutParameter<T>(OracleParameter outParameter, List<T> list)
        {
        }
    }
}
