//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Citest.AppConfigModel
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Linq;
    using System.Text;
    using Oracle.DataAccess.Client;

    public partial class EP_TARGET_INFO : IOracleEntity
    {
        public override bool Equals(object obj)
        {
            return Equals(obj as EP_TARGET_INFO);
        }

        public bool Equals(EP_TARGET_INFO other)
        {
            if (other == null)
            {
                return false;
            }

            return INFO_ID == other.INFO_ID;
        }

        public override int GetHashCode()
        {
            unchecked
            {
                return INFO_ID.GetHashCode();
            }
        }

        void IOracleEntity.Materialize(IDataRecord input, IFieldsCaster caster)
        {
            INFO_ID = caster.GetRecord<decimal>(0, input);
            TARGET_CD = input.IsDBNull(1) ? null : input.GetString(1);
            TABLE_NAME = input.IsDBNull(2) ? null : input.GetString(2);
            COLUMN_NAME = input.IsDBNull(3) ? null : input.GetString(3);
            DATA_TYPE = input.IsDBNull(4) ? null : input.GetString(4);
            DATA_LENGTH = caster.GetRecord<decimal>(5, input);
            DATA_PRECISION = caster.GetNullableRecord<decimal>(6, input);
            DATA_SCALE = caster.GetNullableRecord<decimal>(7, input);
            NULLABLE = input.IsDBNull(8) ? null : input.GetString(8);
            ENABLED = caster.GetNullableRecord<short>(9, input);
        }

        Type[] IOracleEntity.GetFieldTypes()
        {
            return new[]
            {
                typeof(decimal),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(string),
                typeof(decimal),
                typeof(decimal),
                typeof(decimal),
                typeof(string),
                typeof(short),
            };
        }

        string IOracleEntity.GetOracleInsertRequest(string schemaName)
        {
            return "INSERT INTO " + schemaName + "EP_TARGET_INFO\r\n"
                + "    (TARGET_CD, TABLE_NAME, COLUMN_NAME, DATA_TYPE, DATA_LENGTH, DATA_PRECISION, DATA_SCALE, NULLABLE, ENABLED, INFO_ID) VALUES\r\n"
                + "    (:parm1, :parm2, :parm3, :parm4, :parm5, :parm6, :parm7, :parm8, :parm9, :parm10)  ";
        }

        string IOracleEntity.GetOracleUpdateRequest(string schemaName)
        {
            return "UPDATE " + schemaName + "EP_TARGET_INFO\r\n"
                + "SET TARGET_CD = :parm1,\r\n"
                + "    TABLE_NAME = :parm2,\r\n"
                + "    COLUMN_NAME = :parm3,\r\n"
                + "    DATA_TYPE = :parm4,\r\n"
                + "    DATA_LENGTH = :parm5,\r\n"
                + "    DATA_PRECISION = :parm6,\r\n"
                + "    DATA_SCALE = :parm7,\r\n"
                + "    NULLABLE = :parm8,\r\n"
                + "    ENABLED = :parm9\r\n"
                + "WHERE INFO_ID = :parm10\r\n";
        }

        string IOracleEntity.GetOracleDeleteRequest(string schemaName)
        {
            return "DELETE " + schemaName + "EP_TARGET_INFO\r\n"
                + "WHERE INFO_ID = :parm1\r\n";
        }

        OracleParameter IOracleEntity.AddOracleInsertParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            ((IOracleEntity)this).AddOracleUpdateParameters(entities, command);
            return null;
        }

        void IOracleEntity.AddOracleUpdateParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            var parm1 = new List<string>();
            var parm2 = new List<string>();
            var parm3 = new List<string>();
            var parm4 = new List<string>();
            var parm5 = new List<decimal>();
            var parm6 = new List<decimal?>();
            var parm7 = new List<decimal?>();
            var parm8 = new List<string>();
            var parm9 = new List<short?>();
            var parm10 = new List<decimal>();
            foreach (var entity in entities.Cast<EP_TARGET_INFO>())
            {
                parm1.Add(entity.TARGET_CD);
                parm2.Add(entity.TABLE_NAME);
                parm3.Add(entity.COLUMN_NAME);
                parm4.Add(entity.DATA_TYPE);
                parm5.Add(entity.DATA_LENGTH);
                parm6.Add(entity.DATA_PRECISION);
                parm7.Add(entity.DATA_SCALE);
                parm8.Add(entity.NULLABLE);
                parm9.Add(entity.ENABLED);
                parm10.Add(entity.INFO_ID);
            }

            command.BindByName = true;
            command.ArrayBindCount = parm1.Count;
            command.Parameters.Add("parm1", OracleDbType.Varchar2, parm1.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm2", OracleDbType.Varchar2, parm2.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm3", OracleDbType.Varchar2, parm3.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm4", OracleDbType.Varchar2, parm4.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm5", OracleDbType.Decimal, parm5.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm6", OracleDbType.Decimal, parm6.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm7", OracleDbType.Decimal, parm7.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm8", OracleDbType.Varchar2, parm8.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm9", OracleDbType.Int16, parm9.ToArray(), ParameterDirection.Input);
            command.Parameters.Add("parm10", OracleDbType.Decimal, parm10.ToArray(), ParameterDirection.Input);
        }

        void IOracleEntity.AddOracleDeleteParameters(IEnumerable<IOracleEntity> entities, OracleCommand command)
        {
            var parm1 = new List<decimal>();
            foreach (var entity in entities.Cast<EP_TARGET_INFO>())
            {
                parm1.Add(entity.INFO_ID);
            }

            command.BindByName = true;
            command.ArrayBindCount = parm1.Count;
            command.Parameters.Add("parm1", OracleDbType.Decimal, parm1.ToArray(), ParameterDirection.Input);
        }

        void IOracleEntity.ApplyOutParameter<T>(OracleParameter outParameter, List<T> list)
        {
        }
    }
}
